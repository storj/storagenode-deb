#!/bin/sh
# postinst script for storagenode
#
# see: dh_installdeb(1)

set -e

# Source debconf library.
#. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

DAEMON_USER=storj-storagenode
VERSION_SERVER_URL="#VERSION_SERVER_URL#"

. /usr/share/debconf/confmodule

arch=$(dpkg --print-architecture)
if [ "$arch" = "armhf" ]; then
    arch="arm" # use GOARCH notation
fi

get_minimum_url() {
  process=$1
  echo $(wget -O - "${VERSION_SERVER_URL}/processes/${process}/minimum/url?os=linux&arch=${arch}")
}

get_binary() {
    binary=$1
    url=$2
    tmpfile=$(mktemp /tmp/${binary}.zip.XXXXXX)

    wget -O $tmpfile $url
    unzip $tmpfile -d /var/lib/storagenode

    rm $tmpfile
}

case "$1" in
    configure|abort-upgrade|abort-remove)
    installed_version="$2"
    if [ -n "$installed_version" ]; then
        echo "This is a reconfiguration or a reinstallation"
    fi

    db_get storagenode/identitydir
    identitydir="$RET"
    db_get storagenode/wallet
    wallet="$RET"
    db_get storagenode/email
    email="$RET"
    db_get storagenode/external_addr
    external_addr="$RET"
    db_get storagenode/storagedir
    storagedir="$RET"
    db_get storagenode/diskspace
    diskspace="$RET"

	  for binary in "storagenode" "storagenode-updater"; do
	      if [ ! -f "/var/lib/storagenode/${binary}" ]; then
	        echo "Downloading ${binary} binary..."
	        get_binary $binary $(get_minimum_url $binary)
	      fi

        if [ ! -f "/usr/bin/${binary}" ]; then
            ln -s /var/lib/storagenode/${binary} /usr/bin/${binary}
        fi
    done

	  # copy identity
    if [ ! -f "/etc/storagenode/identity/identity.cert" ]; then
        cp ${identitydir}/identity.cert /etc/storagenode/identity
    fi
    if [ ! -f "/etc/storagenode/identity/identity.key" ]; then
        cp ${identitydir}/identity.key /etc/storagenode/identity
    fi

	  # storagenode setup
    if [ ! -f "/etc/storagenode/config.yaml" ]; then
        /var/lib/storagenode/storagenode setup \
        --config-dir "/etc/storagenode" \
        --identity-dir "/etc/storagenode/identity" \
        --operator.email "$email" \
        --operator.wallet "$wallet" \
        --contact.external-address "$external_addr" \
        --storage.path "$storagedir" \
        --storage.allocated-disk-space "$diskspace" \
        --version.server-address "$VERSION_SERVER_URL"

        # fix permissions
        chmod 644 /etc/storagenode/config.yaml
    fi
	
	# add user and fix ownership
    if ! getent passwd $DAEMON_USER > /dev/null; then
        useradd --system -m -d /var/lib/storagenode --shell=/usr/sbin/nologin --user-group $DAEMON_USER  > /dev/null
    fi

    chown -R $DAEMON_USER:$DAEMON_USER /var/lib/storagenode
    chown -R $DAEMON_USER:$DAEMON_USER /etc/storagenode
    ;;

    abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
